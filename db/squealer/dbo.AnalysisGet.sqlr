<?xml version="1.0" encoding="us-ascii"?>
<!-- Flags example: "x;exclude from project|r;needs refactoring" (recommend single-character flags) -->
<Squealer Type="StoredProcedure" Flags="" WithOptions="">
  <!-- Optional T-SQL to execute before the main object is created. -->
  <PreCode><![CDATA[



]]></PreCode>
  <!-- Describe the purpose of this procedure, the return values, and any difficult concepts. -->
  <Comments><![CDATA[

Get all the instance Ids for the analysis

]]></Comments>
  <Parameters>
    <Parameter Name="AnalysisId" Type="int" Output="False" DefaultValue="" Comments="" />
  </Parameters>
  <Code><![CDATA[

select
  a.SentinelId
  ,s.InstanceId as [SoilInstanceId]
  ,t.InstanceId as [TemperatureInstanceId]
  ,m.InstanceId as [MoistureInstanceId]
  ,ss.InstanceId as [SentinelStatusInstanceId]
from
  [dbo].[Analysis] a
left join
  [dbo].[SoilAnalysis] s
  on s.AnalysisId = a.AnalysisId
left join
  [dbo].[TemperatureAnalysis] t
  on t.AnalysisId = a.AnalysisId
left join
  [dbo].[MoistureAnalysis] m
  on m.AnalysisId = a.AnalysisId
left join
  [dbo].[SentinelStatusAnalysis] ss
  on ss.AnalysisId = a.AnalysisId
where
  a.AnalysisId = @AnalysisId

]]></Code>
  <Users>
    <User Name="dbSimplot" />
  </Users>
  <!-- Optional T-SQL to execute after the main object is created. -->
  <PostCode><![CDATA[



]]></PostCode>
</Squealer>